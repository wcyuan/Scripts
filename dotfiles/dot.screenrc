## stolen from rettigl 20080805
## gacked from lewisj 20070725
## gacked from ransford 20070611

#
# cheatsheet
# http://aperiodic.net/screen/quick_reference
# http://www.gnu.org/software/screen/manual/screen.html
#
# ^A c            - create a new window
# ^A n            - window to the right
# ^A <space>      - window to the right
# ^A p            - window to the left
# ^A <backspace>  - window to the left
# ^A ^A           - flip to the last window you were in
# ^A 1            - move to first window
#
# ^A d            - detach
# ^A D D          - detach and close the enclosing window
#
# ^A a            - send a control-a to the shell
# ^A ?            - show all keybindings
#
# ^A S            - Split the window horizontally into two regions
# ^A <tab>        - Move to the other region
# ^A X            - Kill this region
# ^A Q            - Kill all but this region
#
#
# ^A : quit             - quit and kill all windows
# ^A : shell bash       - set the shell to bash (defshell is an alias for shell)
# ^A : shelltitle bash  - set the default window name to bash
# ^A : title <win>      - set the current window name to <win>
# ^A : chdir [<dir>]    - set the working directory for new windows
# ^A : screen <cmd>     - run <cmd> in a new window
#
# screen -S <name>         to start a new session with a given name
# screen -ls               to list all running sessions
# screen -r                to reattach
# screen -s bash -t bash   to set the shell to bash
# screen -r <name>         to reattach to a particular session
# screen -dRR              to reattach, deattaching any other users, and creating a session if necessary.
# screen -S <session> -X screen <cmd>
#                          Run a command in the given screen session, in its own window
#

# automatically detach the screen session when the screen process receives a
# hangup signal.  you can then resume the session with `screen -r'.
autodetach on

# when making a hard copy of a screen, don't wipe an existing hardcopy before
# writing the file.
hardcopy_append on

# background color erase: makes copying w/ the mouse in xterm not
# grab tons of spaces.
defbce on

## bind delete to backspace (no longer needed now that screen's terminfo
## files are installed)
# bindkey -d -k kD stuff "\010"

## The default action key is Ctrl-A.
# Here's the command to rebind Ctrl-T to action key
defescape ^Tt
escape ^Tt

# maintain a neat little status bar at the bottom of the screen
#caption always "%{kG}%?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{kG}%?%+Lw%?"
#caption always "%{kG} %?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{-}%?%+Lw%? %= %D %C%a "
caption always "%{kG} %?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{-}%?%+Lw%? %= "

# set the window title for xterm/putty to be descriptive
# some other cool ideas:
# http://gentoo-wiki.com/TIP_Using_screen
# http://www4.informatik.uni-erlangen.de/~jnweiger/screen-faq.html (using shell to dynamically modify hardstatus)
# see also prompt setting in .cshrc.mine
hardstatus string "[xen %n%?: %t%?] %H"
#hardstatus string "[xen %n%?: %t%?]"
shelltitle "> |tcsh"

bell_msg " hello from window %n! "

# prefer beeps
vbell off
vbell_msg " boooooo! "

# show the first screen by default
select 0

# make scrolling work
termcapinfo xterm ti@:te@
defscrollback 1000

# screen writes to the terminal's hardstatus line
termcapinfo xterm "hs:ts=\E]2;:fs=\007:ds=\E]2;$HOST\007"

# keybindings
bind ^[ resize -1
bind ^] resize +1

# multiuser support
# to use: (me) C-a:acladd user2
#      (user2) screen -x ben/
multiuser on

# ssh agent support
unsetenv SSH_AUTH_SOCK
setenv SSH_AUTH_SOCK $HOME/.screen/sasock.$HOST

# default to bash
shell bash
shelltitle bash

# start with a few screens
screen bash
screen bash
screen bash


# -*- mode: sh -*-
#
# This is meant to go at the end of the standard zshrc that oh-my-zsh
# creates for you.
#


# You oh-my-zsh created zshrc file should have this line:
#    source $ZSH/oh-my-zsh.sh
# But oh-my-zsh completion is super slow.  If you want to
# get rid of oh-my-zsh, you should not source oh-my-zsh.sh
# and just figure out what parts you need.  At very least,
# I like these:
#    source $ZSH/lib/git.zsh
#    source $ZSH/lib/theme-and-appearance.zsh
#    source $ZSH/themes/wcy.zsh-theme

# Pass unmatched globs to the command
#
# http://stackoverflow.com/questions/20037364/why-zsh-tries-to-expand-and-bash-does-not
setopt nonomatch

# Add time/date stamps to history
HIST_STAMPS="yyyy-mm-dd"

# inc_append_history and share_history seem to make it so that up-arrow on
# any shell will see every command you've run in any shell.  I want the recent
# histories of different shells to be independent, but I want to be able to
# easily search the histories of all shells.
setopt append_history
unsetopt inc_append_history
unsetopt share_history

# By default, meta-F in zsh does forward-word, which goes to the
# beginning of the next word. I prefer emacs-forward-word, which
# goes to the end of the current word (then the end of the next
# word, etc).
# http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html
bindkey 'F' emacs-forward-word
bindkey 'f' emacs-forward-word
bindkey '[1;5C' emacs-forward-word


# Make zsh's control-u the same as bash's.  That is, make it do
# backward-kill-line, which deletes all the characters on this line
# from the beginning to the cursor,  but leave the characters after
# the cursor.  By default, it does kill-whole-line, which removes
# everything on the line.
#
# http://stackoverflow.com/questions/3483604/which-shortcut-in-zsh-does-the-same-as-ctrl-u-in-bash
#
# "man zshzle" for more information about zsh command line editor
#
# if you just run bindkey by itself, it will list all keybindings
bindkey \^U backward-kill-line

# I want backward-kill-word to stop at directory delimiters
# It works that way if you use oh-my-zsh, but if you don't,
# you need to set these separately.
#
# http://stackoverflow.com/questions/444951/zsh-stop-backward-kill-word-on-directory-delimiter
autoload -U select-word-style
select-word-style bash
# that works for backwards, but not forwards, maybe emacs-forward-word
# doesn't respect it?
export WORDCHARS=""

alias sa='unalias -m "*"; source ~/.zshrc'

if [ -r ~/.bashzsh ]
then
  source ~/.bashzsh
fi

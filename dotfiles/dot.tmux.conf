# TMUX cheatsheet
#
# From command line:
# tmux new <session name>    -     Start a new session
# tmux a [-t <session name>] -     Attach to an existing session
#
# Note that as long as there is an existing session, the server is running
# The .tmux.conf file is only read when the server is first started (or if you
# tell it to source in the file)
#
# C-b d         detach
#
# C-b c         new window
# C-b n         move to next window
# C-b p         move to previous window
#
# C-b %         split pane vertically
# C-b "         split pane horizontally
# C-b o         move to other pane
# C-b <up>      move to upper pane
# C-b <down>    move to lower pane
# C-b <left>    move to pane on left
# C-b <right>   move to pane on right
# C-b <space>   loop through various pane configurations
# C-b z         maximize pane
#
# C-b :         prompt to run commands
#
# C-b [         start copy mode
# q             leave copy mode
#
# C-b :break-pane
# C-b !         Break the pane into it's own window
#
# C-b :join-pane -s <N>
#               split screen and put pane number N into the other half
# http://unix.stackexchange.com/questions/14300/moving-tmux-window-to-pane
# suggests binding it like this, which asks you for the window to join:
#   bind-key @ command-prompt -p "create pane from:"  "join-pane -s ':%%'"
# or this, which joins with the last window:
#   bind-key j "join-pane -s !"
# or this, which brings up a selection and splits vertically
#   bind-key S choose-window 'join-pane -v -s "%%"'
#
# Some practical differences between tmux and screen
#
# - Tmux has a single server that runs for all sessions.  So as long as you have
#   a single session running, that server is running
# - In screen, the server knows each tab, but it seems like client controls how those tabs
#   are viewed.  If you split the view, each side gets the full set of tabs and you can choose
#   which tab each side is looking at.  If you detach, then reattach, it won't remember the way
#   you had split the screen before.  If you attach to a screen session multiple times, each
#   client can look at different tabs.  But each window has only one size, so if different clients
#   have different sizes, you have to pick one.  Different windows can have different sizes, though.
# - In tmux, it seems that the server stores view information as well.  So if you split a window,
#   then detach, then reattach, the split is still there.  In tmux, each window includes the split
#   and all the panes.  If you move to another window, the split disappears.  Even if you split that
#   window, it doesn't have access to the panes in the other windows.  If you attach to a tmux multiple
#   times, each client sees exactly the same thing -- if you move windows in one, all clients will move
#   windows.
#   Tmux splitting is more sophisticated, it's easier to have more complicated layouts.  
#

set -g default-shell /bin/zsh
set -g default-command /bin/zsh

set -g history-limit 1000000

# Make the mouse wheel scroll the buffer instead of command history
set -g mode-mouse on

# NOTE: turning on mouse-select-pane and mouse-select-window
# means that selecting text will no longer copy it to the clipboard
# and middle-click will no longer paste from the clipboard.
# Instead, you need to use shift-select in order to copy
# and shift-middle-click to paste.
# https://awhan.wordpress.com/2012/04/18/tmux-copy-paste-with-mouse/
#
# Allow mouse to select which pane to use
set -g mouse-select-pane on
# Allow mouse to select which window to use
set -g mouse-select-window on

# Allow xterm titles in terminal window, terminal scrolling with
# scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right
set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"

# Use "control-b ?" to see a list of all key-bindings
bind-key @ choose-window 'join-pane -h -s "%%"'
